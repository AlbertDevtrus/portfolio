/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 .\cube.gltf 
*/

import { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber';

import { useScroll } from 'framer-motion'

export default function Model(props) {
  const group = useRef(null);

  const { scrollYProgress } = useScroll({
    target: document.querySelector('.about'),
    offset: ['start start', 'end end']
  });

  useFrame(() => {
    group.current.rotation.y += 0.02 * scrollYProgress.current;
    group.current.rotation.x += 0.05 * scrollYProgress.current;
  })

  const { nodes } = useGLTF('/cube.gltf')

  return (
    <group {...props} dispose={null} ref={group}>
      <mesh geometry={nodes.cube.geometry} material={nodes.cube.material} rotation={[0, 1.57, 0]} />
      <mesh geometry={nodes.Box.geometry} material={nodes.Box.material} position={[0, 0.2, 0.79]} />
      <mesh geometry={nodes.Box_1.geometry} material={nodes.Box_1.material} position={[0, 0.8, 0.22]} rotation={[-1.558, 0, 0]} />
      <mesh geometry={nodes.Box_2.geometry} material={nodes.Box_2.material} position={[0, -0.8, -0.22]} rotation={[-Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Box_3.geometry} material={nodes.Box_3.material} position={[0, -0.2, -0.79]} />
    </group>
  )
}

useGLTF.preload('/cube.gltf')
